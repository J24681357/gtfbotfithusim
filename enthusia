   /*
          if (userdata["raceinprogress"]["active"]) {
          require(__dirname.split("/").slice(0,4).join("/") + "/" + "commands/status").execute(msg, {options:"exit"}, userdata);
          if (racesettings["type"] == "TIMETRIAL") {
          var results2 = gtf_RACEEX.timetrialresults(racesettings, racedetails, finalgrid, checkpoint, embed, msg, userdata)
          embed.setDescription(results2)
          embed.setFields([{
          name:gtf_STATS.menuFooterEnthu(userdata),
          value: "ðŸš˜ " +  gtf_CARS.shortName(racesettings["driver"]["car"]["name"]) +
" " + "**" + racesettings["driver"]["car"]["fpp"] + gtf_EMOTE.fpp + "**"}]);
            ////exit from session with no results
         gtf_DISCORD.send(msg, {content: "<@" + userdata["id"] + "> **FINISH**", embeds: [embed]}, race2func)
            function race2func(msg) {
          gtf_RACEEX.createRaceButtons(racesettings, racedetails, finalgrid,  checkpoint, results2, buttons, emojilist, embed, msg, userdata);

          if (racesettings["mode"] == "CAREER") {
         var complete = gtf_STATS.checkEvent(racesettings, "1st", userdata);
                if (complete) {
            gtf_STATS.completeEvent(racesettings, userdata);
              gtf_STATS.redeemGift(gtf_EMOTE.goldmedal + " Congrats! Completed " + racesettings["title"].split(" - ")[0] + " " + gtf_EMOTE.goldmedal, racesettings["prize"], embed, msg, userdata);
                }
          } else if (racesettings["mode"] == "LICENSE") {
             var option = racesettings["eventid"].replace("LICENSE", "").toLowerCase().split("-")[0]
    if (option == "b" || option == "a" ||option == "ic" || option == "ib" || option == "ia" || option == "s") {
            gtf_RACEEX.licensecheck(racesettings, racedetails, finalgrid, embed, msg, userdata)
    }
          }
          if (racesettings["mode"] != "ONLINE") {
          gtf_STATS.saveEnthu(userdata);
          }
        }
          }
          }
        */